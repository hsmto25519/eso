helm repo add external-secrets https://charts.external-secrets.io

helm install external-secrets \
   external-secrets/external-secrets \
    -n external-secrets \
    --create-namespace \
    --set installCRDs=true

---
vault secrets enable -path=eso -version=2 -description="This secret engine is used the ESO to get secrets" kv
vault kv put eso/foo my-value=mysecret01

# prepare a role for vault
kubectl create sa vault-auth -n vault
kubectl create rolebinding k8s-auth-client-for-vault -n vault --clusterrole=system:auth-delegator --user=vault-auth
<token viwer 確認>

# prepare registering data to vault for k8s auth
kubectl config set-context <select a server you wanna connect to>

#openshiftと違って先にsaのsecretを取得できるようにする必要あり
kubectl apply -f vault-auth.yaml -n vault

token_reviewer_jwt=$(kubectl get secret -n vault -o jsonpath='{.data.token}' vault-auth | base64 -d)
kubernetes_host=$(kubectl config view -o jsonpath='{.clusters[].cluster.server}' --minify=true)   # internal? fd00:10:96::1
kubernetes_ca_cert=$(kubectl config view -o jsonpath='{.clusters[].cluster.certificate-authority-data}' --minify=true --raw)

# enable k8s auth
vault auth enable -description="k8s secret engine for vault" kubernetes 
vault write auth/kubernetes/config \
    token_reviewer_jwt=$token_reviewer_jwt \
    kubernetes_host=$kubernetes_host \
    kubernetes_ca_cert=$kubernetes_ca_cert

vault write auth/kubernetes/role/eso-vault \
    bound_service_account_names=vault-auth \
    bound_service_account_namespaces=vault \
    policies=default,eso-vault-client \
    ttl=15m

# vault policy write <POLICY_NAME> <POLICY_FILE>
vault policy write eso-vault-client eso-vault-client.hcl

# check this
vault write auth/kubernetes/login role=eso-vault jwt=$token_reviewer_jwt

---
# values.yaml
https://github.com/external-secrets/external-secrets/blob/main/deploy/charts/external-secrets/values.yaml

---
memo
windows上で動かすためのもの
host=kubernetes.default.svc.cluster.local
vault write auth/kubernetes/config token_reviewer_jwt=eyJhbGciOiJSUzI1NiIsImtpZCI6IlhtaV9kckU0QnE0ckZGWHE2cV9PbG1FbXFRY1ljREYyeU1zSHJOTmtYSkEifQ.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJ2YXVsdCIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VjcmV0Lm5hbWUiOiJ2YXVsdC1hdXRoIiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZXJ2aWNlLWFjY291bnQubmFtZSI6InZhdWx0LWF1dGgiLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlcnZpY2UtYWNjb3VudC51aWQiOiJkMzVkNTZmZC0yNGYzLTQ1YjgtYTFlOS0yMGIxNWEwOGYxNzIiLCJzdWIiOiJzeXN0ZW06c2VydmljZWFjY291bnQ6dmF1bHQ6dmF1bHQtYXV0aCJ9.ZVA94W8YZfC35SY-v2PSBN4nIcw6tALFUh41W8IzLPnXhOxD1zY3kZ1sTwKywDpoGMTKk3b7cayPXtanWhuj9qQtJezBg7UdQXxfhWy5XCRgoW8LNpkW26KiaaenFIAnfS2TZswj-M3b3gSUBMmfN5LlJiqojgDid4qz3gnEhYrWZw88vWc80Qw8KIwv673XVrqJxgMDlVbWMxG8UoffBTyYE6sorr40Y7246nh_mDi2nIjbYm1oz5tPb5hHgxOXdhRTn0iAuaqALhVYS7ohstJzDxzEXvkJF5PA0ytJSq0Wz0hYC1b69Z86gM9xOZ9CqAIPiOMQed-u11UGsjx3VA  kubernetes_host="https://$host:443"  kubernetes_ca_cert=$aaaa
vault write auth/kubernetes/role/eso-vault bound_service_account_names=vault-auth bound_service_account_namespaces=vault policies=default,eso-vault-client ttl=24h
vault read auth/kubernetes/config

# debug
JWT="$(cat /var/run/secrets/kubernetes.io/serviceaccount/token)"
VAULT_ADDRESS=vault.vault.svc.cluster.local
curl --request POST --data '{"jwt": "'"$JWT"'", "role": "eso-vault"}' -s -k http://${VAULT_ADDRESS}:8200/v1/auth/kubernetes/login

kubectl run -it --rm --image=nginx --serviceaccount=vault-auth -n vault test -- /bin/bash
