apiVersion: external-secrets.io/v1beta1
kind: ClusterSecretStore
metadata:
  name: vault-backend-k8s-auth
  labels:
    service: secret-manager
    version: 1.0.0
    env: prd
spec:
  provider:
    vault:
      server: http://vault.vault.svc.cluster.local:8200
      path: eso
      version: v2
      auth:
        # Authenticate against Vault using a Kubernetes ServiceAccount
        # token stored in a Secret.
        # https://www.vaultproject.io/docs/auth/kubernetes
        kubernetes:
          # Path where the Kubernetes authentication backend is mounted in Vault
          mountPath: kubernetes
          # A required field containing the Vault Role to assume.
          role: eso-vault
          # Optional service account field containing the name
          # of a kubernetes ServiceAccount
          serviceAccountRef:
            name: vault-auth
            namespace: vault
          # Optional secret field containing a Kubernetes ServiceAccount JWT
          #  used for authenticating with Vault
          # secretRef:
          #   name: "my-secret"
          #   key: "vault"
# ---
# apiVersion: v1
# kind: Secret
# metadata:
#   name: vault-token
#   namespace: external-secrets
# data:
#   token: aHZzLnR0WXF1MURsT1g3YmhTUmlwY1J0WnJ3SQ== # "root - so I dont recommend this setting"

---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: vault-example2
spec:
  refreshInterval: 15s
  secretStoreRef:
    name: vault-backend-k8s-auth
    kind: ClusterSecretStore
  target:
    name: example-sync02
  data:
  - secretKey: foobar
    remoteRef:
      key: eso/foo
      property: my-value

---
# will create a secret with:
# kind: Secret
# metadata:
#   name: example-sync
# data:
#   foobar: czNjcjN0
